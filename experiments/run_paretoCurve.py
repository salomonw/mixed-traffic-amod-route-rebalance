import src.tnet as tnet
import src.CARS as cars
from matplotlib import rc
import matplotlib.pyplot as plt
import pandas as pd
import experiments.build_NYC_subway_net as nyc


rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})
import seaborn as sns; sns.set()
sns.set_style("ticks")
#sns.set_style("whitegrid")
#rc('text', usetex=True)


def read_net(net_name, g_multi=1):
    if net_name == 'NYC':
        tNet, tstamp, fcoeffs = nyc.build_NYC_net('data/net/NYC_M/', only_road=True)
    else:
        netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters(net_name=net_name,
                                                                               experiment_name=net_name + '_n_variation')
        tNet = tnet.tNet(netFile=netFile, gFile=gFile, fcoeffs=fcoeffs)

    g_per = tnet.perturbDemandConstant(tNet.g, g_multi)
    tNet.set_g(g_per)

    return tNet




def run_pareto(net_name, ns=[7], theta_n=4, g_multi=6):
    d =[]
    for n in ns:
        for linear in [True, False]:
            tNet = read_net(net_name, g_multi=g_multi)
            tNet.build_supergraph(walk_multiplier=1, identical_G=True)
            tNet, runtime, od_flows = cars.solve_bush_CARSn(tNet, fcoeffs=tNet.fcoeffs, n=n, theta_n=theta_n,
                                                            exogenous_G=False, rebalancing=True, linear=linear, bush=True,  LP_method=5, QP_method=-1)
            CARSnobj = cars.get_CARS_obj_val(tNet, G_exogenous=False)
            if linear == True:
                tp = 'LP'
            else:
                tp = 'QP'
            d0 = {'Net': net_name, 'A': tNet.nLinks, 'V': tNet.nNodes, 'W': tNet.nOD,
                  'type2': 'CARS' + str(n) + '-' + tp, 'obj': CARSnobj, 't': runtime, 't_reb':0, 'type': tp}
            d.append(d0)
            print(pd.DataFrame(d))
            del tNet

    return pd.DataFrame(d)


def plot_pareto(df):
    fig, ax = plt.subplots()
    for label in ['LP', 'QP']:
        df2 = df[df['type']==label]
        #ax = sns.regplot(x='t', y='obj', data=df2, order=1, logx=True, label=label, truncate=False)
        df2 = df2.sort_values(by='t')
        plt.plot(df2.t, df2.obj, '-o', label=label)

    plt.xlabel('t')
    plt.ylabel('obj')
    plt.legend()
    plt.tight_layout()
    plt.savefig(net + '_pareto_p.pdf')
    #plt.show()
    return fig, ax



ns = [3,4,5,6,7,8,9,10]
#ns.extend(ns)
#ns.extend(ns)
#nets = ['Sioux Falls', 'Anaheim', "EMA_mid", "NYC"]
#nets = ['Sioux Falls', 'Anaheim', "EMA_mid"]
nets = ['EMA_mid', 'NYC']
nets = ['NYC']
#nets = ['Sioux Falls']
#nets = ['Anaheim']
#nets = ["EMA_mid"]
#nets = ['Sioux Falls', 'Anaheim', "EMA_mid", "NYC"]
for net in nets:
    df = run_pareto(net, ns)
    df.to_csv(net + '_pareto.csv')
    fig, ax = plot_pareto(df)

    #plt.show()

'''


def runtime_algs(probs):

    runtimes = {}
    for prob in probs.keys():
        runtimes[prob] = {}
        for alg in probs[prob]:
            runtimes[prob][alg] = {}
            runtimes[prob][alg]['runtime'] = []
            runtimes[prob][alg]['obj'] = []
            runtimes[prob][alg]['n'] = []
            runtimes[prob][alg]['rms'] = []


    for i in range(max_lines):
        for k in range(10):
            theta, a, rms = cars.get_approx_fun(fcoeffs=fcoeffs, nlines=i + 2, range_=[0, 3], plot=False)
            theta.append(3)
            # print('\n')
            for prob, algs in probs.items():
                for alg in algs:
                    tNet = tnet.tNet(netFile=netFile, gFile=gFile, fcoeffs=fcoeffs)
                    tNet.build_supergraph(walk_multiplier=1)
                    q = [(u, v) for (u, v, d) in tNet.G_supergraph.edges(data=True) if d['type'] == 'p']
                    q = [(u, v) for (u, v, d) in tNet.G_supergraph.edges(data=True) if d['type'] == 'f']
                    g_per = tnet.perturbDemandConstant(tNet.g, 1)
                    tNet.set_g(g_per)

                    if prob == 'LP':
                        linear = True
                    else:
                        linear = False
                    #random.seed(8)
                    tNet, runtime, od_flows = cars.solve_bush_CARSn(tNet, fcoeffs=fcoeffs,
                                                               n=i+2, exogenous_G=False,
                                                               rebalancing=True, linear=linear,
                                                               theta=theta, a=a, method=alg, bush=True)

                    obj = tnet.get_totalTravelTime(tNet.G_supergraph, fcoeffs)

                    runtimes[prob][alg]['runtime'].append(runtime)
                    runtimes[prob][alg]['obj'].append(obj)
                    runtimes[prob][alg]['n'].append(i+2)
                    runtimes[prob][alg]['rms'].append(rms)

                    print('Prob:' +prob+ '\t | \t Alg: ' + str(alg) + '\t | \t n: ' + str(i + 2) + '\t | \t runtime: ' + str(round(runtime,3))+ '\t | \t obj: ' + str(round(obj,0))+ '\t | \t rms: ' + str(round(rms)))
            del tNet
    return runtimes


netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('EMA', experiment_name='EMA_penRate_comparison-'+'REB')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('EMA_mid', experiment_name='EMA_mid_test_rebalancingRoutes')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('NYC_Uber_small', experiment_name='NYC_Uber_small_penRate_comparison')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('NYC_Uber_small_1', experiment_name='NYC_Uber_small_1_penRate_comparison-REB')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('Anaheim', experiment_name='Anaheim_test_CARSn')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('Barcelona', experiment_name='Barcelona_buildNet')
#netFile, gFile, fcoeffs, tstamp,dir_out = tnet.get_network_parameters('Winnipeg', experiment_name='Winnipeg')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('Sydeny', experiment_name='Sydeny')
#netFile, gFile, fcoeffs, tstamp, dir_out = tnet.get_network_parameters('SiouxFalls', experiment_name='SiouxFalls')

max_lines = 10
probs = {'LP':[1], 'QP':[1]}
runtimes = runtime_algs(probs)

# NYC
#runtimes = {'LP': {1: {'runtime': [0.00302886962890625, 0.002772092819213867, 0.0027680397033691406, 0.0027658939361572266, 0.0027899742126464844, 0.002765178680419922, 0.0025811195373535156, 0.002741098403930664, 0.0027179718017578125, 0.00273895263671875, 0.002653837203979492, 0.00286102294921875, 0.0029799938201904297, 0.002732992172241211, 0.0025320053100585938, 0.0027189254760742188, 0.0027811527252197266, 0.00290679931640625, 0.002608060836791992, 0.0026018619537353516, 0.0032689571380615234, 0.003072023391723633, 0.002978086471557617, 0.0031578540802001953, 0.0028810501098632812, 0.0030379295349121094, 0.0030739307403564453, 0.002886056900024414, 0.0029501914978027344, 0.003216981887817383, 0.0032889842987060547, 0.003305196762084961, 0.003036022186279297, 0.003269195556640625, 0.003159046173095703, 0.003184080123901367, 0.003345012664794922, 0.003446817398071289, 0.003579854965209961, 0.0031478404998779297, 0.003443002700805664, 0.0034580230712890625, 0.0034058094024658203, 0.0033071041107177734, 0.0033960342407226562, 0.003392934799194336, 0.003358125686645508, 0.0034170150756835938, 0.003520965576171875, 0.003367185592651367, 0.003996849060058594, 0.003679037094116211, 0.003522157669067383, 0.003625154495239258, 0.003641843795776367, 0.003551006317138672, 0.003587961196899414, 0.003756999969482422, 0.0037178993225097656, 0.003525972366333008, 0.00400090217590332, 0.0037729740142822266, 0.004019975662231445, 0.0036880970001220703, 0.004336833953857422, 0.003854036331176758, 0.0038890838623046875, 0.003876924514770508, 0.0043032169342041016, 0.004087924957275391, 0.004323005676269531, 0.004260063171386719, 0.004723072052001953, 0.0040590763092041016, 0.0042760372161865234, 0.0044019222259521484, 0.004413127899169922, 0.00431513786315918, 0.004281044006347656, 0.004433870315551758, 0.004416942596435547, 0.00438690185546875, 0.004531145095825195, 0.0047419071197509766, 0.004392862319946289, 0.0046808719635009766, 0.004495143890380859, 0.004593849182128906, 0.004366874694824219, 0.004415988922119141, 0.005082130432128906, 0.004773139953613281, 0.004957914352416992, 0.004725933074951172, 0.004915952682495117, 0.004724979400634766, 0.004778861999511719, 0.004893064498901367, 0.0049397945404052734, 0.005032062530517578], 'obj': [18398.434988921534, 18398.434988921534, 18398.434988921537, 18398.434988921537, 18398.434988921534, 18398.434988921537, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921537, 18398.434988921534, 18398.434988921534, 18398.434988921537, 18398.434988921534, 18398.434988921537, 18398.434988921534, 18398.434988921537, 18398.434988921537, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921537, 18398.434988921537, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18266.29716638627, 18398.434988921534, 18234.205260076797, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18398.434988921534, 18345.03844271755, 18394.95280977509, 18398.434988921534, 18262.88840977724, 18188.528802626828, 18398.434988921534, 18398.434988921537, 18400.49271106368, 18412.6872152813, 18398.434988921534, 18359.364009363948, 18258.933936029698, 18249.56974864345, 18398.434988921534, 18398.434988921534, 18231.09093845185, 18398.434988921534, 18188.562609936434, 18151.431248413155, 18384.338549855816, 18420.8132334527, 18178.1160400114, 18429.135786779938, 18197.322851569796, 18398.442211549514, 18345.11108244499, 18298.12495224146, 18238.639270104333, 18371.99696849753, 18147.31737777722, 18188.592956811568, 18258.599757795757, 18152.73856735274, 18242.303225549786, 18228.246005395104, 18493.153736298606, 18250.90395340298, 18189.510063320522, 18188.48177082863, 18274.204366082082, 18485.22082428594, 18216.39654723682, 18390.8308252806, 18188.807585941842, 18151.560655901154, 18188.643347760855, 18288.093982309936, 18457.77771774745, 18506.694164883374, 18408.055933434305], 'n': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 'rms': [0.3654267077575992, 0.36465497622949045, 0.3645081110886194, 0.3645081110886194, 0.36559567629323386, 0.3645081110886194, 0.363714065035748, 0.36465497622949045, 0.36465497622949045, 0.36465497622949045, 0.15625084574986342, 0.15518122797546482, 0.15544510875640405, 0.15648166824009274, 0.15849866433417625, 0.15681137226057915, 0.15632656180469814, 0.15491905590703126, 0.15792293051894313, 0.16305320138576526, 0.08681990583236208, 0.08530590019738625, 0.08882610120141728, 0.08529912798477231, 0.09439572078143918, 0.09024916626420165, 0.08602234603919187, 0.08989372522427987, 0.08844614031044114, 0.08831975125611477, 0.06230299579588246, 0.05532263106230238, 0.06514214496203465, 0.05581545993339438, 0.06039305708727451, 0.057182055605055654, 0.057582519230193016, 0.05705877062365272, 0.05583771057754059, 0.056622579007365614, 0.04033333353083752, 0.04518216436031147, 0.040381916138711935, 0.0474909648310582, 0.04106869016165946, 0.04015397888120113, 0.039430572257020645, 0.03961847481849327, 0.03854216051978765, 0.03878677004561155, 0.034014130665235655, 0.03336792129756069, 0.030162166314274777, 0.029250306533183765, 0.032080255462732514, 0.03246548835749313, 0.02821093740569759, 0.03039834405284655, 0.027826717068630706, 0.02894608594946967, 0.021760736195607387, 0.026310103034752046, 0.027366385458531813, 0.02485368263932439, 0.028892109388220785, 0.02888244455531355, 0.024196041781386707, 0.03314707302250417, 0.024321877989921085, 0.023370322789604856, 0.02032561431461871, 0.019301385408958687, 0.019936341625406064, 0.016664221263487405, 0.017966531107970304, 0.02477052225188293, 0.016564153996218748, 0.020141902316685823, 0.01951761563518841, 0.020865715002323832, 0.015409034577038452, 0.01677406539017951, 0.0181595422810654, 0.021958769809287793, 0.015755414387964115, 0.017973315367126798, 0.014369906231551054, 0.015180823126584447, 0.014502623761021223, 0.018194943803955754, 0.015349105906416187, 0.013217823594246076, 0.01614830290331909, 0.014072705804441955, 0.011858202405238617, 0.012155249525925607, 0.014315953209510674, 0.013358406612357725, 0.013130102516657853, 0.014945682490629122]}}, 'QP': {1: {'runtime': [0.005208015441894531, 0.0048389434814453125, 0.004858970642089844, 0.004755973815917969, 0.005480051040649414, 0.004813194274902344, 0.0052149295806884766, 0.004806041717529297, 0.004808902740478516, 0.004777193069458008, 0.005747079849243164, 0.005287885665893555, 0.005015134811401367, 0.005017995834350586, 0.004926204681396484, 0.005224943161010742, 0.005029916763305664, 0.00522303581237793, 0.00521087646484375, 0.004895210266113281, 0.005235195159912109, 0.004643917083740234, 0.005231142044067383, 0.0050389766693115234, 0.004530906677246094, 0.004803895950317383, 0.004645109176635742, 0.004467964172363281, 0.0045320987701416016, 0.005246162414550781, 0.004723072052001953, 0.0047299861907958984, 0.004788875579833984, 0.004904985427856445, 0.0047070980072021484, 0.0047168731689453125, 0.004743814468383789, 0.005075931549072266, 0.004707813262939453, 0.004689931869506836, 0.005782127380371094, 0.005431175231933594, 0.005620002746582031, 0.00560307502746582, 0.005724906921386719, 0.005558013916015625, 0.00548100471496582, 0.005671977996826172, 0.005636930465698242, 0.005736112594604492, 0.005861043930053711, 0.005909919738769531, 0.005983829498291016, 0.005686044692993164, 0.005856037139892578, 0.005841970443725586, 0.005788087844848633, 0.006057024002075195, 0.005986928939819336, 0.005808115005493164, 0.006132841110229492, 0.0060808658599853516, 0.006100893020629883, 0.006186962127685547, 0.006097078323364258, 0.006194114685058594, 0.0061948299407958984, 0.006247997283935547, 0.006323814392089844, 0.005967140197753906, 0.005734920501708984, 0.0061588287353515625, 0.0061800479888916016, 0.006261110305786133, 0.0060939788818359375, 0.006265878677368164, 0.006051063537597656, 0.006181001663208008, 0.006039857864379883, 0.006164073944091797, 0.006400108337402344, 0.00625300407409668, 0.006312847137451172, 0.00626683235168457, 0.006309032440185547, 0.006134986877441406, 0.006273031234741211, 0.006357908248901367, 0.0062808990478515625, 0.006247043609619141, 0.006630897521972656, 0.006451129913330078, 0.0065538883209228516, 0.0065670013427734375, 0.006636142730712891, 0.006559133529663086, 0.006582021713256836, 0.006605863571166992, 0.006663084030151367, 0.00661778450012207], 'obj': [18271.404926198753, 18267.86604274333, 18268.238488656814, 18268.238488656814, 18271.822170185384, 18268.238488656814, 18269.820132998444, 18267.86604274333, 18267.86604274333, 18267.86604274333, 18252.296342514757, 18252.509933275425, 18253.362833760355, 18252.036488135822, 18255.561030969635, 18252.017521595844, 18253.608957572713, 18254.1263390125, 18252.31728381484, 18255.611815800392, 18258.427957369695, 18261.90655488224, 18258.069346055734, 18258.857468212016, 18268.648744022044, 18262.4508945303, 18261.72403657764, 18269.174179092905, 18273.80234731746, 18258.698148707237, 18276.80619268364, 18276.80619268364, 18339.844944457476, 18266.98479567173, 18340.57314890233, 18302.771847990025, 18270.158634460247, 18262.623243879967, 18296.912678755492, 18300.486431705052, 18338.060379148763, 18321.425988018484, 18294.825492389187, 18280.336879182643, 18286.056452420416, 18317.673798043666, 18344.365207712515, 18329.61946076262, 18279.4417366926, 18281.63347231534, 18347.064691629203, 18348.436142770803, 18308.789448032552, 18316.939498844822, 18199.17031425621, 18294.41328647173, 18317.965077513123, 18345.58011586542, 18345.58011586542, 18298.29518481927, 18377.33530541489, 18313.797869054015, 18303.124480005612, 18338.419710009093, 18306.455746295775, 18276.75801088457, 18305.371040406557, 18214.122829097567, 18194.664299079624, 18354.953723473693, 18355.07464016068, 18186.297389345593, 18383.703269444373, 18236.057690699836, 18336.401856981873, 18331.48767365388, 18358.22783690523, 18242.900541069033, 18368.97112165323, 18212.211427703733, 18210.372289762643, 18313.42031242247, 18194.83621321832, 18296.986916342063, 18274.58935242992, 18491.67054855402, 18304.831506940693, 18194.243289910613, 18202.938216573417, 18330.49733202771, 18484.629462913832, 18260.088251821213, 18335.03089855943, 18212.10299026476, 18197.47035448212, 18210.750285772738, 18334.791640933618, 18452.60134027581, 18423.1832669747, 18333.0336733149], 'n': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 'rms': [0.3654267077575992, 0.36465497622949045, 0.3645081110886194, 0.3645081110886194, 0.36559567629323386, 0.3645081110886194, 0.363714065035748, 0.36465497622949045, 0.36465497622949045, 0.36465497622949045, 0.15625084574986342, 0.15518122797546482, 0.15544510875640405, 0.15648166824009274, 0.15849866433417625, 0.15681137226057915, 0.15632656180469814, 0.15491905590703126, 0.15792293051894313, 0.16305320138576526, 0.08681990583236208, 0.08530590019738625, 0.08882610120141728, 0.08529912798477231, 0.09439572078143918, 0.09024916626420165, 0.08602234603919187, 0.08989372522427987, 0.08844614031044114, 0.08831975125611477, 0.06230299579588246, 0.05532263106230238, 0.06514214496203465, 0.05581545993339438, 0.06039305708727451, 0.057182055605055654, 0.057582519230193016, 0.05705877062365272, 0.05583771057754059, 0.056622579007365614, 0.04033333353083752, 0.04518216436031147, 0.040381916138711935, 0.0474909648310582, 0.04106869016165946, 0.04015397888120113, 0.039430572257020645, 0.03961847481849327, 0.03854216051978765, 0.03878677004561155, 0.034014130665235655, 0.03336792129756069, 0.030162166314274777, 0.029250306533183765, 0.032080255462732514, 0.03246548835749313, 0.02821093740569759, 0.03039834405284655, 0.027826717068630706, 0.02894608594946967, 0.021760736195607387, 0.026310103034752046, 0.027366385458531813, 0.02485368263932439, 0.028892109388220785, 0.02888244455531355, 0.024196041781386707, 0.03314707302250417, 0.024321877989921085, 0.023370322789604856, 0.02032561431461871, 0.019301385408958687, 0.019936341625406064, 0.016664221263487405, 0.017966531107970304, 0.02477052225188293, 0.016564153996218748, 0.020141902316685823, 0.01951761563518841, 0.020865715002323832, 0.015409034577038452, 0.01677406539017951, 0.0181595422810654, 0.021958769809287793, 0.015755414387964115, 0.017973315367126798, 0.014369906231551054, 0.015180823126584447, 0.014502623761021223, 0.018194943803955754, 0.015349105906416187, 0.013217823594246076, 0.01614830290331909, 0.014072705804441955, 0.011858202405238617, 0.012155249525925607, 0.014315953209510674, 0.013358406612357725, 0.013130102516657853, 0.014945682490629122]}}}
# EMA_mid
#runtimes = {'LP': {1: {'runtime': [0.8001751899719238, 0.781390905380249, 0.8167920112609863, 0.7800090312957764, 0.737529993057251, 0.7383098602294922, 0.793036937713623, 0.7028689384460449, 0.7852270603179932, 0.7500839233398438, 0.7413680553436279, 0.7302608489990234, 0.7641358375549316, 0.7225480079650879, 0.7755188941955566, 0.7451431751251221, 0.7297918796539307, 0.725520133972168, 0.742603063583374, 0.7471940517425537, 0.7474789619445801, 0.7631039619445801, 0.7631189823150635, 0.8170449733734131, 0.7589521408081055, 0.7582659721374512, 0.7506000995635986, 0.7032790184020996, 0.7557499408721924, 0.7957119941711426, 0.814680814743042, 0.8037941455841064, 0.7901458740234375, 0.749690055847168, 0.7828819751739502, 0.7673749923706055, 0.804034948348999, 0.810142993927002, 0.8333630561828613, 0.7678918838500977, 0.867332935333252, 0.8254649639129639, 0.7849650382995605, 0.7497479915618896, 0.7807300090789795, 0.8134160041809082, 0.8233239650726318, 0.7943618297576904, 0.8351831436157227, 0.8397319316864014, 0.9159829616546631, 0.779106855392456, 0.8691658973693848, 0.8056869506835938, 0.8399839401245117, 0.8882920742034912, 0.8173420429229736, 0.8236842155456543, 0.7677371501922607, 0.8609969615936279, 0.8951427936553955, 1.0195231437683105, 0.8927230834960938, 0.8288910388946533, 0.8549289703369141, 0.9809749126434326, 0.9273550510406494, 0.9731268882751465, 0.8461658954620361, 0.8301999568939209, 0.8778259754180908, 0.9075660705566406, 0.9095540046691895, 1.0613470077514648, 0.9542129039764404, 1.1043579578399658, 0.9270570278167725, 0.9770019054412842, 0.9617979526519775, 1.0546658039093018, 1.1254608631134033, 1.0280978679656982, 1.0745110511779785, 1.0436911582946777, 0.9592130184173584, 1.0668139457702637, 1.1170461177825928, 0.9445068836212158, 0.9617960453033447, 1.1204180717468262, 0.9657330513000488, 1.119865894317627, 1.015712022781372, 1.106999158859253, 1.138916015625, 1.0277738571166992, 1.0134379863739014, 1.0344371795654297, 1.2253470420837402, 1.1190900802612305], 'obj': [44367.68048737846, 44367.68048737846, 43929.93411301886, 43560.5470543557, 44346.6235397091, 44346.6235397091, 44430.23817385696, 43312.8981128726, 44430.23817385696, 43472.53135170341, 38345.44405418265, 37893.94404122138, 38084.231123142876, 38186.95938115045, 38524.982023460114, 38138.92339057618, 38131.41331776276, 38051.63436241823, 37785.32981812102, 38252.766881363015, 36700.99406326141, 36923.03210989181, 36634.35513111498, 37188.38258013751, 36732.125064826854, 36815.311338431355, 36693.42515850779, 36918.81747370481, 36969.95446658042, 37088.56747932763, 36707.201438489756, 36592.32147981677, 36406.49286598082, 36454.273015079634, 36866.0575956262, 36625.88798813852, 36606.296495263414, 36603.3835790842, 36448.703301157024, 36606.30716368571, 36935.036698193006, 36377.112022714624, 36433.86031109842, 36390.18738846427, 36405.32601785401, 36699.500288873074, 36457.46266496946, 36391.98797017735, 36629.57389437003, 36683.1880918373, 36396.69370531751, 36375.292152310874, 36417.33310491796, 36462.93770276465, 36490.138557816084, 36415.53948582416, 36576.98315449779, 36641.02700607311, 36696.112132183815, 36678.026650072665, 36802.28724029736, 37453.98211096543, 36391.95973142331, 36616.66496362232, 36475.02190306206, 37530.7003877272, 37528.82729394457, 37638.268302934855, 37367.29994413837, 36396.08937743248, 36502.03193203678, 36662.730018652146, 36666.42461809083, 37707.36648480679, 37245.86117128807, 37530.09676007508, 36611.133964038025, 37564.97645563819, 36645.21946748616, 37639.89141788096, 37632.8523718915, 37447.042291275866, 37625.92066625179, 37806.16526379641, 36406.908347130855, 37519.26203620172, 37615.31577427738, 36839.25957974516, 36924.11017902718, 37633.483682544844, 36716.305858393156, 38347.16305903578, 37410.28900642844, 37805.97993406207, 37746.75145307238, 37806.587188992744, 37646.32699282969, 37190.8867340858, 38033.61893873016, 37813.69223100613], 'n': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 'rms': [0.3654267077575992, 0.3654267077575992, 0.363714065035748, 0.3645081110886194, 0.3654217657905347, 0.3654217657905347, 0.36549981207039267, 0.3657567812890223, 0.36549981207039267, 0.36465497622949045, 0.1555120835829525, 0.15596182429160474, 0.15773525009326972, 0.15523616458171868, 0.15627200620390738, 0.15490147870745577, 0.16110673482437507, 0.15803483457521816, 0.15665480105781893, 0.15538744986978, 0.09446012440030904, 0.08635869766531445, 0.09340652757872406, 0.11026808461003905, 0.08846581922291465, 0.0858667608878445, 0.0890972503211689, 0.08748728692450045, 0.08895441493258288, 0.08697212178141599, 0.05489149257286164, 0.054534665724903265, 0.05750605587594256, 0.06127478372591984, 0.059510127734641226, 0.056205881861872274, 0.05719191196525065, 0.05547731392570334, 0.05933968564921773, 0.05749809534450099, 0.048925685172596114, 0.040482530484296946, 0.04526172803762125, 0.03866403219311061, 0.04147241074946712, 0.047808803753545945, 0.040768702289650634, 0.040996670210275324, 0.044111661287412195, 0.045476705786803115, 0.029498232321387895, 0.031973883873880324, 0.027700076501114935, 0.03140628142523179, 0.029794048096847565, 0.02958292469359943, 0.030974882687423252, 0.03187803595326209, 0.036127602436196095, 0.029402855727949817, 0.022206856480850617, 0.024455029143407758, 0.02639768939470947, 0.022843422393021107, 0.021431189984641084, 0.023043393150148046, 0.025850027406890845, 0.023152131003119174, 0.024701957019918, 0.027261202678849173, 0.021182656588635034, 0.019005105378581057, 0.022991653616036754, 0.01951865947910427, 0.02262594232709078, 0.019370772281639238, 0.02324546446333897, 0.02333159603153818, 0.019872160274365846, 0.022296136614037117, 0.01710731283166516, 0.015027591274151632, 0.01887588037589526, 0.015444799759085689, 0.017785218257312708, 0.017828166413115805, 0.01626164762691492, 0.015724035460357014, 0.015165425582639213, 0.014720113736485347, 0.011285588160096142, 0.01563909424640906, 0.013338498994967479, 0.014959970248704184, 0.013397629677911334, 0.012835432086856126, 0.014346029171582635, 0.01455385279606609, 0.016834939022637024, 0.014194905525915045]}}}
# Anaheim
#runtimes = {'LP': {1: {'runtime': [8.819199085235596, 8.931231021881104, 9.198647022247314, 9.049000024795532, 9.233559846878052, 9.246891021728516, 9.715091943740845, 9.010208129882812, 8.94880199432373, 9.598966121673584, 9.444629192352295, 12.370179891586304, 9.627487897872925, 9.43535304069519, 9.238444089889526, 9.265305042266846, 9.364979982376099, 12.269610166549683, 10.453030824661255, 8.63782787322998, 11.31310486793518, 10.835222005844116, 11.109218835830688, 10.48481798171997, 11.779940128326416, 10.46428108215332, 11.153151035308838, 10.161095142364502, 10.26271390914917, 10.537185907363892, 12.045116901397705, 11.278517961502075, 11.666469812393188, 11.674306869506836, 11.122169971466064, 11.709968090057373, 11.418941020965576, 12.169534921646118, 11.70580506324768, 12.751988887786865, 12.564107179641724, 12.642711162567139, 13.19152283668518, 13.213988065719604, 11.719444990158081, 12.85425090789795, 11.940578937530518, 12.92873501777649, 13.17766809463501, 14.424949884414673, 13.986560106277466, 14.204921960830688, 12.848905086517334, 13.275711059570312, 13.042317867279053, 12.958899021148682, 13.753017902374268, 14.050463914871216, 13.96142315864563, 13.529983043670654, 13.843760013580322, 14.236900091171265, 13.17681097984314, 16.777519941329956, 14.859724044799805, 15.002279996871948, 14.188091039657593, 15.723197937011719, 14.466987133026123, 22.129581928253174, 15.106815099716187, 14.895503997802734, 15.082242965698242, 14.342534065246582, 14.803077936172485, 14.484352111816406, 14.108675956726074, 15.234786033630371, 15.062662839889526, 15.09120798110962, 14.636214017868042, 14.695044040679932, 15.165472984313965, 17.039310932159424, 22.207768201828003, 15.849395990371704, 15.883806943893433, 15.323033809661865, 17.47440195083618, 15.634785175323486, 16.39602494239807, 18.271584033966064, 25.822402000427246, 16.395766973495483, 18.120180130004883, 26.29943609237671, 24.614130973815918, 15.54957389831543, 24.388474225997925, 16.508579969406128], 'obj': [1646893.6338058654, 1647051.565703245, 1639924.7453816808, 1647051.565703245, 1639924.7453816808, 1640039.5222300456, 1653472.8581004678, 1647442.7659886214, 1643797.438573407, 1639486.2570928256, 1587974.3812104939, 1579813.7229842658, 1593287.0617101088, 1589603.479748652, 1585057.060091166, 1585383.2712131464, 1585383.2712131464, 1581864.504004014, 1586000.5333702087, 1582089.0377302228, 1569090.9728991487, 1572620.6509516737, 1570437.394844557, 1567178.812178297, 1572884.724384618, 1570361.477398438, 1573116.769828286, 1572319.5988703324, 1572505.4098577236, 1567575.4085695494, 1569065.480370295, 1562471.9136721306, 1563483.6007706749, 1562291.9837835378, 1564578.4853863139, 1563246.8833171965, 1567150.3238363743, 1563506.2831607175, 1562196.3994483643, 1568345.2182145112, 1572011.086499773, 1578829.418369563, 1568961.788421258, 1568149.9368957893, 1568525.3685911428, 1571127.7811768393, 1562674.3539256214, 1569745.7892995123, 1575556.9776068404, 1570484.5710029944, 1571140.6916004927, 1573901.8285390616, 1567750.7511487778, 1564271.8736967035, 1567434.5099711472, 1575316.7163504018, 1569444.710243809, 1568376.8812682712, 1569465.7878925337, 1566134.05772783, 1572597.231196259, 1573771.8808122973, 1568958.3805916621, 1572516.883260381, 1567062.197156253, 1566374.8980977316, 1568915.0357096223, 1566483.790523714, 1576033.5861887191, 1566748.6215102475, 1565832.243570385, 1567473.6947388535, 1568211.2479187117, 1570872.5705918758, 1566273.6001781307, 1567139.390241995, 1569825.6466371971, 1564645.5495364347, 1565618.094188821, 1567611.3214024655, 1565734.640767321, 1568573.8812712657, 1568125.7397609565, 1567532.810283982, 1577912.6577236557, 1565438.078575395, 1565594.1201092904, 1568008.1081176014, 1572665.3505592758, 1565053.6491014534, 1568324.0289532994, 1578102.88482725, 1585303.5423854864, 1566181.398652273, 1582520.8384768867, 1573662.3921728788, 1578197.9147629405, 1565943.0804637184, 1578432.6316629667, 1571937.2201313232], 'n': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], 'rms': [0.3654217657905347, 0.36549981207039267, 0.36451390016288165, 0.36549981207039267, 0.36451390016288165, 0.3645081110886194, 0.37257222107133675, 0.36559567629323386, 0.363714065035748, 0.36465497622949045, 0.15629977971672715, 0.1572341729487113, 0.15779761616525584, 0.15667978457280513, 0.1552306623623009, 0.15529393111467027, 0.15529393111467027, 0.15689326741460102, 0.15561323528224547, 0.15596182429160474, 0.09123606271530653, 0.08587594844476475, 0.08540526214631858, 0.08929775756031522, 0.08834904857049346, 0.08769991170861602, 0.08646774699326122, 0.08593703268238875, 0.08635484591194839, 0.0869970332314795, 0.05750936709830699, 0.05373260253564046, 0.05548366288439424, 0.05702378241241522, 0.055098878576361074, 0.05555115958127565, 0.057502430926150365, 0.05491792104243899, 0.05734709422905272, 0.058436072034710726, 0.039828817204446275, 0.04272383277752688, 0.04224446318952647, 0.038637369771191345, 0.047817050826567245, 0.039498158336571186, 0.04316486821640082, 0.0441557407627135, 0.0452771640543538, 0.04359868570106706, 0.03288938811970662, 0.031117572444946406, 0.03270957506302807, 0.033437506891527066, 0.029726744836035244, 0.028744648677566192, 0.03211369052339126, 0.03613230750175102, 0.02792645671831241, 0.03927674864006198, 0.023173585645615564, 0.023676597236154232, 0.02484181235946632, 0.027413856283465363, 0.024883567155307856, 0.025330312447568778, 0.02461647663831132, 0.026753783914977288, 0.026171305738156906, 0.023298809193890654, 0.019359951455485767, 0.01928657132995829, 0.02088109741386831, 0.018067685412244044, 0.02346562793333282, 0.020849358908437678, 0.01758723007867974, 0.020573186709496212, 0.021166931774894975, 0.017085091301875414, 0.017340111915375375, 0.0168401837036512, 0.015632623616295742, 0.017644671024983197, 0.017719792449786574, 0.014301653502525163, 0.014903018645966049, 0.014424990044931802, 0.014887945826703834, 0.015080567456061839, 0.013698221159202321, 0.013007903734747871, 0.0144412441393489, 0.014696931579365514, 0.012748951037242726, 0.01593973643349797, 0.015564896938496515, 0.013517798616523953, 0.012965570320245652, 0.012620960596783365]}}}


print(runtimes)

algs_dict = {0:'primal spmx', 1:'dual spmx', 2:'barrier', 3:'concurrent', \
             4:'det concurrent', 5:'det concurrent spmx'}

dfLP = pd.DataFrame.from_dict(runtimes['LP'][1])
if len(probs)>1:
    dfQP = pd.DataFrame.from_dict(runtimes['QP'][1])

fig, ax = plt.subplots(2, figsize=(6,4))
sns.lineplot(x='n', y='runtime', data=dfLP, legend='full', label='LP', ax=ax[0])
if len(probs)>1:
    sns.lineplot(x='n', y='runtime', data=dfQP, legend='full', label='QP', ax=ax[0])

sns.lineplot(x='n', y='obj', data=dfLP, legend='full', label='LP', ax=ax[1])
if len(probs)>1:
    sns.lineplot(x='n', y='obj', data=dfQP, legend='full', label='QP', ax=ax[1])


for i in ax:
    i.grid(True)
    i.legend()
    i.set_xlim([dfLP.n.min(), dfLP.n.max()])
plt.tight_layout()



fig, axs = plt.subplots(figsize=(6,4))
#xlim = [0,2]
axs.set_xlim([0, max(dfLP.rms)*1.1])
#axs.set_ylim([min(dfLP.runtime), max(dfLP.runtime)])
sns.regplot(x="rms", y="runtime", data=dfLP, ax=axs, x_ci=95, scatter=False, order=1, logx=True, label='LP', truncate=False)
sns.scatterplot(x="rms", y="runtime", data=dfLP, hue="n", palette='colorblind')
if len(probs)>1:
    sns.regplot(x="rms", y="runtime", data=dfQP, ax=axs, x_ci=95, scatter=False, order=1, logx=True, label='QP', truncate=False)
    sns.scatterplot(x="rms", y="runtime", data=dfQP, hue="n", legend=False, palette='colorblind')
axs.grid(True)
#axs.legend()
axs.legend(loc='center left', bbox_to_anchor=(1, 0.5))
plt.tight_layout()
plt.show()
'''